{
  //□□□ベースとなるDockerイメージファイル□□□
  "name": "Flutter_cirrusci_latest",
  "image": "cirrusci/flutter:latest", //flutter+dart+android SDKの環境dockerイメージ(エミュレータは不可だが実機接続可)
  // "image": "mcr.microsoft.com/vscode/devcontainers/universal:2",//codespacesの標準イメージ
  //  "image": "mcr.microsoft.com/vscode/devcontainers/base:jammy",//ubuntuの最新イメージ
  "runArgs": [ //一時ファイル領域
    "--shm-size=4g"
  ],
  "hostRequirements": { //必要な場合にオンに
    "memory": "6gb"
  },
  "forwardPorts": [ //flweb等の標準ポート
    3000
  ],
  "remoteEnv": {
    //"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
  },
  //"remoteUser": "vscode",
  //"overrideCommand": false,
  "features": {
    //□□□【コンテナ側で追加インストールできるスイッチ pythonとか便利】□□□
    //"docker-in-docker": "latest",
    //"docker-from-docker": "latest",
    //"kubectl-helm-minikube": "latest",
    //"terraform": "latest",
    //"git": "latest",
    "microsoft/vscode-dev-containers/git-lfs@v0.238.1": "latest",//git-lfsが3.2で少しエラーが出ているので下記をコメントアウトして暫定
//     "git-lfs": "latest", //gitで25MBのapkとかを扱う時に必要
    //"github-cli": "latest",
    //"azure-cli": "latest",
    //"sshd": "latest",
    //"desktop-lite": "latest",
    //"homebrew": "latest",
    //"python": "latest",
    //"golang": "latest",
    //"java": "lts",
    //"maven": "latest",
    //"gradle": "latest",
    //"ruby": "latest",
    //"rust": "latest",
    //"powershell": "latest"
    "fish": "latest" //bashが使いにくいので
  },
  "customizations": { // Configure properties specific to VS Code.
    "vscode": {
      "extensions": [
        //□□□【共通機能】□□□
        "zhuangtongfa.material-theme", //function部分が水色でいちばん見やすい"One Dark Pro Mix"。githubthemeは現在dartの "editor.semanticHighlighting.enabled": falseが必須でまともに使えない為
        "vscode-icons-team.vscode-icons", //アイコン表示を全アイコン中から最もわかりやすく(Androidとiosとか)
        "ms-ceintl.vscode-language-pack-ja", //日本語拡張機能
        "ms-vsliveshare.vsliveshare", //コーディング画面共有 だれがどこで何を書いているか確認可能　ビジター招待も可能
        "ms-vscode-remote.remote-containers", //リモート環境でのコンテナへのアクセス
        "usernamehw.errorlens", //エラーを行毎に把握
        "eamodio.gitlens", //gitの履歴を一目瞭然で行毎に把握
        "mhutchie.git-graph", //ボトムバーからgit graphを選ぶとツリー上に履歴が一目瞭然で確認可能(gitlens+の機能の先行開発部分切り出し)
        "yutengjing.vscode-archive", //zipファイルの解答
        "oderwat.indent-rainbow", //インデントをレインボーに表示しどのインデントかをわかりやすく
        "rangav.vscode-thunder-client", //APIをたたく為のチェック機能
        "streetsidesoftware.code-spell-checker", //Vallueとかの存在しない言葉をチェック
        "christian-kohler.path-intellisense", //パスを設定するときの自動補完
        "alefragnani.bookmarks", //ブックマーク機能
        "svipas.control-snippets", //スニペットの有効無効を切り替える 予測変換だらけになった時の為に
        "ms-vscode.live-server", //HTMLのライブプレビュー
        "ryu1kn.partial-diff", //部分指定のdiffをする機能
        //□□□【Flutter/Dart】□□□
        "circlecodesolution.ccs-flutter-color", //flutterのカラーボックスを表示(Android Studioの標準機能)
        "ricardo-emerson.flutter-development-extensions-pack", //flutter開発の拡張機能一式（個別で有効にするなら下記の一覧(一部)から）
        //"alexisvt.flutter-snippets",
        //"Dart-Code.dart-code",
        //"Dart-Code.flutter",
        //"nash.awesome-flutter-snippets",
        //"ricardo-emerson.create-flutter-widgets-and-classes",
        //"rodrigorahman.flutter-dart-utils",
        //□□□【実験的な機能】（承認されたアカウントが必要）□□□
        "github.copilot-nightly", //Copilotによる自動入力補完機能 alt+[,],tab,をメインで使う。ctrl+Enterで予測一覧
        "github.copilot-labs" //その補完機能の追加機能
      ],
      "settings": {
        //□□□【ターミナル】□□□
        "terminal.integrated.shell.linux": "fish", //profile.だが、この方法でないとコンテナ上では時間差でシェルが初期有効にならない為
        "terminal.integrated.defaultProfile.linux": "fish", //profile.だが、この方法でないとコンテナ上では時間差でシェルが初期有効にならない為
        // "terminal.integrated.shell.windows": "fish", //
        // "terminal.integrated.shell.osx": "fish", //
        "terminal.integrated.fontSize": 12, // ターミナルフォントサイズを変更
        "debug.console.fontSize": 12, // デバグコンソールフォントサイズを変更
        //□□□【テーマ・フォント】□□□
        "workbench.colorTheme": "One Dark Pro Mix", //これがもっとも見やすい
        "workbench.iconTheme": "vscode-icons", // ファイルアイコンテーマ(Androidフォルダやiosフォルダでアイコン変わるアイコン集の中で最もわかりやすい)
        "editor.fontFamily": "Source Han Code JP", //Adobeが創った猛烈に見やすいプログラミングフォント
        //□□□【見やすさ追求】□□□
        "workbench.startupEditor": "newUntitledFile", //初期画面なし
        "editor.guides.bracketPairs": true, //括弧の対応を有効
        "editor.bracketPairColorization.enabled": true, // 括弧の対応を色付ける
        "editor.renderControlCharacters": true, // 制御文字を表示する
        "editor.renderWhitespace": "all", // エディター上での空白文字を・にする
        "editor.tabSize": 2, // 1つのタブに相当する半角スペースの数
        "workbench.colorCustomizations": {
          "editor.selectionBackground": "#e3e9ef70", //ダーク系は選択範囲が見にくいので必須 最後の2桁は透過度
          "editor.lineHighlightBackground": "#00003950", //カーソル行の背景色
          "editor.cursorBlinking": "expand" //カーソルをビヨンビヨンさせる
        },
        "window.zoomLevel": -1, // // 画面全体のズームサイズを変更(）
        "editor.fontSize": 14, // フォントサイズを変更
        "editor.letterSpacing": -0.5, // 字間を縮める
        "editor.lineHeight": 1, // 行間を縮める
        "editor.rulers": [ //列に線を表示
          40,
          80,
          120
        ],
        //□□□【校正・スニペット・コードレビュー他】□□□
        "terminal.integrated.copyOnSelection": true, //ターミナルでコピーできるように
        "debug.inlineValues": "on", //debug中に変数を全表示
        "search.showLineNumbers": true, // 検索ビューの検索結果に行数を併記
        "git-graph.openNewTabEditorGroup": "Beside", //gitgraphのクリック時に同じペインではなくsplit rightで表示
        "files.trimFinalNewlines": true, // ファイル保存時に最終行以降の空行を削除
        "files.trimTrailingWhitespace": true, // ファイル保存時に各行の末尾にある半角スペースを削除
        "editor.formatOnSave": true, //保存時にフォーマット
        "editor.acceptSuggestionOnEnter": "off", // enterでサジェストを決定しない
        "editor.suggest.showKeywords": false, // これをfalseにするとkeywordだけ消してくれる
        "editor.suggest.showWords": false, // textもいらないので消す
        "editor.snippetSuggestions": "top", // snippetのサジェストを最初に出す。
        "editor.suggestSelection": "recentlyUsedByPrefix", // 入力した時にどの項目にカーソルを合わせた状態にするかみたいなやつrecentlyUsedByPrefixにした
        "editor.suggest.snippetsPreventQuickSuggestions": false, //スニペット中にサジェスト無効を無効にする
        "editor.codeActionsOnSave": { //一括置換するときに修正が間に合わずエラーが出るようで、使いどころは要注意
          // "source.fixAll": true,        //コード修正の場合
          // "source.organizeImports": true//importの順番整理の場合
        },
        //□□□【言語別】□□□
        //dart
        "dart.previewFlutterUiGuides": true, //階層構造で出す
        "dart.previewFlutterUiGuidesCustomTracking": true,
        "dart.useLsp": true, //言語サーバープロトコルを有効
        "dart.renameFilesWithClasses": "always" // always, prompt（選択制）, never のオプションあり
      }
    }
  },
  "postCreateCommand": "fish .devcontainer/postCreate.sh"
  // "postStartCommand": "fish .devcontainer/postAttach.sh"
  // "postStartCommand": "fish .devcontainer/postAttach.sh"
}
